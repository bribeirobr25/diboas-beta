# diBoaS Enterprise Security Configuration
# Enhanced security headers for production deployment

# ===========================
# SECURITY HEADERS
# ===========================

# Prevent MIME type sniffing
Header always set X-Content-Type-Options "nosniff"

# Prevent clickjacking attacks
Header always set X-Frame-Options "DENY"

# Enable XSS protection
Header always set X-XSS-Protection "1; mode=block"

# Referrer policy for privacy
Header always set Referrer-Policy "strict-origin-when-cross-origin"

# Content Security Policy (Enhanced)
Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src 'self' data: https: blob:; connect-src 'self' https://www.google-analytics.com https://analytics.google.com https://api.diboas.com; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;"

# HTTP Strict Transport Security (HSTS)
Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

# Permissions Policy (Feature Policy)
Header always set Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()"

# Cross-Origin policies
Header always set Cross-Origin-Opener-Policy "same-origin"
Header always set Cross-Origin-Embedder-Policy "require-corp"
Header always set Cross-Origin-Resource-Policy "same-origin"

# ===========================
# PERFORMANCE OPTIMIZATION
# ===========================

# Enable compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json application/xml application/rss+xml application/atom+xml image/svg+xml
</IfModule>

# Enable browser caching
<IfModule mod_expires.c>
    ExpiresActive On
    
    # HTML files (short cache for dynamic content)
    ExpiresByType text/html "access plus 1 hour"
    
    # CSS and JavaScript (longer cache with versioning)
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType text/javascript "access plus 1 year"
    
    # Images (long cache)
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/avif "access plus 1 year"
    
    # Fonts (long cache)
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
    
    # Manifests and other files
    ExpiresByType application/manifest+json "access plus 1 week"
    ExpiresByType text/cache-manifest "access plus 0 seconds"
</IfModule>

# Cache control headers
<IfModule mod_headers.c>
    # Remove ETags (we use explicit caching)
    Header unset ETag
    FileETag None
    
    # Cache control for static assets
    <FilesMatch "\.(css|js|png|jpg|jpeg|gif|svg|webp|avif|woff|woff2)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>
    
    # Cache control for HTML
    <FilesMatch "\.(html|htm)$">
        Header set Cache-Control "public, max-age=3600, must-revalidate"
    </FilesMatch>
</IfModule>

# ===========================
# URL REWRITING & ROUTING
# ===========================

<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Force HTTPS redirect
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    
    # Remove trailing slashes
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{THE_REQUEST} /+[^\s]*\?* HTTP/
    RewriteRule ^(.+)/$ /$1 [R=301,L]
    
    # Handle SPA routing (if needed for future JavaScript routing)
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} !^/api/
    RewriteRule ^.*$ /index.html [L]
</IfModule>

# ===========================
# FILE ACCESS CONTROL
# ===========================

# Deny access to sensitive files
<FilesMatch "\.(htaccess|htpasswd|ini|log|sh|sql|txt|md)$">
    Require all denied
</FilesMatch>

# Deny access to hidden files and directories
<FilesMatch "^\.">
    Require all denied
</FilesMatch>

# Protect against common attacks
<FilesMatch "(config|wp-config|database|settings)">
    Require all denied
</FilesMatch>

# ===========================
# MIME TYPES
# ===========================

<IfModule mod_mime.c>
    # Modern image formats
    AddType image/webp .webp
    AddType image/avif .avif
    
    # Modern font formats
    AddType font/woff2 .woff2
    
    # Application types
    AddType application/manifest+json .webmanifest
    AddType application/json .json
</IfModule>

# ===========================
# ERROR HANDLING
# ===========================

# Custom error pages (optional - implement if error pages exist)
# ErrorDocument 404 /404.html
# ErrorDocument 500 /500.html

# ===========================
# ADDITIONAL SECURITY
# ===========================

# Disable server signature
ServerTokens Prod

# Prevent access to .git directory
<DirectoryMatch "\.git">
    Require all denied
</DirectoryMatch>

# Prevent access to node_modules
<DirectoryMatch "node_modules">
    Require all denied
</DirectoryMatch>